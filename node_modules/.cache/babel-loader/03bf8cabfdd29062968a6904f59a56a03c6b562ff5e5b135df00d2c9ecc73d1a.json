{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/Project-UKS/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport Dashboard from './dashboard';\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nconst login = setTimeout(() => {\n  if (path === \"/\" || path === \"/login\") {\n    if (path !== \"/\" || path !== \"/dashboard\") {\n      navigate(\"/\");\n    }\n  }\n}, 1000);\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","Dashboard","BrowserRouter","Routes","Route","Navigate","reportWebVitals","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","login","setTimeout","path","navigate","render","StrictMode","children","element","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/opt/lampp/htdocs/Project-UKS/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport Dashboard from './dashboard'\nimport { BrowserRouter, Routes, Route, Navigate  } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nconst login = setTimeout(() => {\n  if (path === \"/\" || path === \"/login\") {\n    if(path !==\"/\" || path !== \"/dashboard\"){\n      navigate(\"/\")\n    }\n  }}, 1000);\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<App />} />\n        <Route path=\"/dashboard\" element={<Dashboard />} />\n      </Routes>\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,aAAa,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAS,kBAAkB;AAC1E,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,IAAI,GAAGV,QAAQ,CAACW,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjE,MAAMC,KAAK,GAAGC,UAAU,CAAC,MAAM;EAC7B,IAAIC,IAAI,KAAK,GAAG,IAAIA,IAAI,KAAK,QAAQ,EAAE;IACrC,IAAGA,IAAI,KAAI,GAAG,IAAIA,IAAI,KAAK,YAAY,EAAC;MACtCC,QAAQ,CAAC,GAAG,CAAC;IACf;EACF;AAAC,CAAC,EAAE,IAAI,CAAC;AACXP,IAAI,CAACQ,MAAM,cACTT,OAAA,CAACV,KAAK,CAACoB,UAAU;EAAAC,QAAA,eACfX,OAAA,CAACN,aAAa;IAAAiB,QAAA,eACZX,OAAA,CAACL,MAAM;MAAAgB,QAAA,gBACLX,OAAA,CAACJ,KAAK;QAACW,IAAI,EAAC,GAAG;QAACK,OAAO,eAAEZ,OAAA,CAACR,GAAG;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpChB,OAAA,CAACJ,KAAK;QAACW,IAAI,EAAC,YAAY;QAACK,OAAO,eAAEZ,OAAA,CAACP,SAAS;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACA,CACpB,CAAC;;AAED;AACA;AACA;AACAlB,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}